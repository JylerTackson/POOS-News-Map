{
  "openapi": "3.1.0",
  "info": {
    "title": "NewsMap API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://newsmap.today/"
    }
  ],
  "paths": {
    "/api/news/daily": {
      "get": {
        "summary": "Get all stored daily news articles",
        "tags": [
          "News"
        ],
        "responses": {
          "200": {
            "description": "Array of news articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyNewsArticle"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/news/country/{country}": {
      "get": {
        "summary": "Get all articles for a specific country",
        "tags": [
          "News"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "country",
            "required": true,
            "description": "2‑letter country code (ISO 3166-1 alpha‑2) used by NewsAPI (e.g., \"us\", \"gb\")",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of news articles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DailyNewsArticle"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/news/country-from-coords/{lat}/{lng}": {
      "get": {
        "summary": "Reverse geocode coordinates to a country",
        "tags": [
          "News"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "lat",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "lng",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Country for the provided coordinates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "country": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/team": {
      "get": {
        "summary": "Retrieve all team members",
        "tags": [
          "Team"
        ],
        "responses": {
          "200": {
            "description": "Array of team members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TeamMember"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/users/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegisterInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "Login with email and password",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublic"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "description": "Email not verified"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/users/{email}": {
      "get": {
        "summary": "Get user by email",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPublicWithFavorites"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/users/update/{id}": {
      "patch": {
        "summary": "Update a user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdateInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Update": {
                      "type": "string"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserPublic"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "$ref": "#/components/responses/Conflict"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/users/delete/{id}": {
      "delete": {
        "summary": "Delete a user by ID",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/users/verify-email": {
      "get": {
        "summary": "Verify email using token & id",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified"
          },
          "400": {
            "description": "Invalid or expired token"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/users/forgot-password": {
      "post": {
        "summary": "Send a temporary password to the user's email",
        "tags": [
          "Users"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success (even if email doesn't exist)"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/api/users/{id}/favorites": {
      "post": {
        "summary": "Add a favorite article",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SavedArticle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article favorited; returns updated favorites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "savedArticles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SavedArticle"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "summary": "Remove a favorite article",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "headline",
                  "source"
                ],
                "properties": {
                  "headline": {
                    "type": "string"
                  },
                  "source": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Article unfavorited; returns updated favorites"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DailyNewsArticle": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "nullable": true
          },
          "headline": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "source": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "urlToImage": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "favorite": {
            "type": "boolean"
          }
        }
      },
      "SavedArticle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DailyNewsArticle"
          }
        ]
      },
      "UserPublic": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "avatarUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        }
      },
      "UserPublicWithFavorites": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserPublic"
          },
          {
            "type": "object",
            "properties": {
              "savedArticles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SavedArticle"
                }
              }
            }
          }
        ]
      },
      "UserRegisterInput": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 6
          }
        }
      },
      "UserLoginInput": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "UserUpdateInput": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "avatarUrl": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "TeamMember": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "degree": {
            "type": "string"
          },
          "gradYear": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "headshot": {
            "type": "object",
            "properties": {
              "data": {
                "type": "string",
                "description": "Base64-encoded image"
              },
              "contentType": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Missing or invalid parameters"
      },
      "Unauthorized": {
        "description": "Authentication failed"
      },
      "Conflict": {
        "description": "Resource already exists / conflict"
      },
      "NotFound": {
        "description": "Resource not found"
      },
      "ServerError": {
        "description": "Internal server error"
      }
    }
  },
  "tags": [
    {
      "name": "News",
      "description": "Daily news pulled from NewsAPI and stored in MongoDB"
    },
    {
      "name": "Team",
      "description": "Project team member info"
    },
    {
      "name": "Users",
      "description": "Registration, login, profile management & favorites"
    }
  ]
}